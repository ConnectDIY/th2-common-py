/*****************************************************************************
 * Copyright 2020-2020 Exactpro (Exactpro Systems Limited)
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *****************************************************************************/

syntax = "proto3";
package th2;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "th2/infra.proto";

option java_multiple_files = true;
option java_package = "com.exactpro.th2.eventstore.grpc";

message BatchID {
    string id = 1;
}

enum EventStatus {
    SUCCESS = 0;
    FAILED = 1;
}

message EventID {
    string id = 1; // Unique event id in TH2 deploy
}

message Event {
    EventID id = 1;
    EventID parent_id = 2; // Event id of parent event. It is null for root event
    google.protobuf.Timestamp start_timestamp = 3;
    google.protobuf.Timestamp end_timestamp = 4;
    EventStatus status = 5; // Aggregated status of current and children events which sync written.
    string name = 6;
    string type = 7;
    bytes body = 8;
    repeated MessageID attached_message_ids = 9;
}

message EventBatch {
    EventID parent_event_id = 1;
    repeated Event events = 2; // Events optional related to between themselves. No events outside this batch should refer to the events in this batch.
}

message StoreEventRequest {
    Event event = 1;
}

message StoreEventBatchRequest {
    EventBatch event_batch = 1;
}

message Response {
    google.protobuf.StringValue error = 1;
    google.protobuf.StringValue id = 2;
}

service EventStoreService {
    rpc StoreEvent (StoreEventRequest) returns (Response);
    rpc StoreEventBatch (StoreEventBatchRequest) returns (Response);
}
